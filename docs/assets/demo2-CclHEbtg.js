import{z as J,b as j,A as T,c as E,B as K,C as H,u as Q,T as X,a as F,V as I,v as D,s as Y,D as Z,l as _,d as $,N as ee,f as te,g as ae,P as ne,W as re,S as ie,O as oe,M as se,k as le,R as W,F as ue,E as de,n as G,G as V,o as ce,q as me,r as fe,t as we,w as pe,I as he}from"./PointerManager-q_a3Vce9.js";/* empty css              */const ve=J(([t=T(1),n=T(1),c=T(1)])=>{const f=j(0,2,1).mul(.3333333333333333).add(t);return E(K(H(f).mul(6).sub(3)).sub(1),0,1).sub(1).mul(n).add(1).mul(c)}),xe=()=>{const t=Q(new X),n=F(new I),c=F(1),f=D(Y.xy).mul(n),i=D(f.x,f.y.oneMinus()),e=t.sample(i).toVar(),k=H(Z(e.y,e.x).mul(1/(Math.PI*2))).mul(2).sub(1).abs().mul(-1).add(1).mul(1/6).add(c),L=_(e.xy),O=E(L.mul(40),.3,.9),U=$(ve(k,O,.9),1),S=new ee;return S.vertexNode=te(),S.fragmentNode=U,ae(S,{uTexture:t,uTextureSize:n,uTimeStep:c})},l={pixelRatio:.5,solverIteration:5,forceRadius:20,forceCoefficient:500,dissipation:.96};let N=0;const d=new ne;let a,x,R,v,p=Math.round(window.innerWidth*window.devicePixelRatio*l.pixelRatio),m=Math.round(window.innerHeight*window.devicePixelRatio*l.pixelRatio),u=new I,o,s,y,M,b,P,z,g;await ge();q(performance.now());async function ge(){a=new re({antialias:!1,forceWebGL:!1}),await a.init(),a.setPixelRatio(window.devicePixelRatio),a.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(a.domElement),x=new ie,R=new oe(-1,1,1,-1,0,1),v=new se(new le(2,2)),x.add(v);const t={wrapS:V,wrapT:V,minFilter:G,magFilter:G,format:de,type:ue,depthBuffer:!1,stencilBuffer:!1};o=new W(p,m,t),s=new W(p,m,t),B(o),B(s),y=ce(),M=me(),b=fe(),P=we(),z=pe(),g=xe(),await Se(g),window.addEventListener("resize",A),d.init(a.domElement),d.addEventListener("firstInteraction",()=>{document.querySelector("#overlay-hint").style.display="none"}),A()}function A(){a.setPixelRatio(window.devicePixelRatio),a.setSize(window.innerWidth,window.innerHeight);const t=window.innerWidth*window.devicePixelRatio,n=window.innerHeight*window.devicePixelRatio;p=Math.round(t*l.pixelRatio),m=Math.round(n*l.pixelRatio),o.setSize(p,m),s.setSize(p,m),d.resizeTarget(l.pixelRatio,a.backend.coordinateSystem===he?m:0),u.set(1/p,1/m),y.uniforms.uTexelSize.value.copy(u),M.uniforms.uTexelSize.value.copy(u),b.uniforms.uTexelSize.value.copy(u),P.uniforms.uTexelSize.value.copy(u),z.uniforms.uTexelSize.value.copy(u),g.uniforms.uTextureSize.value.set(1/t,1/n)}function q(t){const n=(t-N)/1e3;if(d.isPointerDown){const i=y,e=i.uniforms,r=d.pointer.clone().sub(d.prevPointer).multiply(u).multiplyScalar(l.forceCoefficient);e.uData.value=o.texture,e.uForceCenter.value.copy(d.pointer.clone().multiply(u)),e.uForceDeltaV.value.copy(r),e.uForceRadius.value=l.forceRadius,w(i,s),h()}const c=Math.min(Math.max(Math.floor(n*240),1),8),f=n/c;for(let i=0;i<c;i++){{const e=M,r=e.uniforms;r.uData.value=o.texture,r.uDeltaT.value=f,r.uDissipation.value=l.dissipation,w(e,s),h()}{const e=b,r=e.uniforms;r.uData.value=o.texture,w(e,s),h()}for(let e=0;e<l.solverIteration;e++){const r=P,C=r.uniforms;C.uData.value=o.texture,w(r,s),h()}{const e=z,r=e.uniforms;r.uData.value=o.texture,w(e,s),h()}}{const i=g,e=i.uniforms;e.uTexture.value=o.texture,e.uTimeStep.value=t*1e-4,w(i,null)}d.updatePreviousPointer(),N=t,requestAnimationFrame(q)}function B(t){a.setRenderTarget(t),a.clearColor(),a.setRenderTarget(null)}function w(t,n){v.material=t,a.setRenderTarget(n),a.render(x,R),a.setRenderTarget(null)}function h(){[o,s]=[s,o]}async function Se(t){v.material=t;const n=await a.debug.getShaderAsync(x,R,v);console.log(n.vertexShader),console.log(n.fragmentShader)}
